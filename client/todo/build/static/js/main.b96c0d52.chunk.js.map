{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","hooks/useInterval.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","postData","method","body","JSON","stringify","text","requesting_user","headers","console","log","fetch","then","response","json","todo","push","id","completed","catch","error","name","Todo","index","indexOf","putData","data","filter","td","TodoList","filteredTodos","map","App","useState","status","setFilteredTodos","useEffect","filterHandler","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b96c0d52.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus}) => {\r\n    \r\n    //Events\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        /*\r\n        setTodos([\r\n            ...todos, \r\n            {text: inputText, completed: false, id: Date.now()},\r\n        ]);\r\n        */\r\n        const postData = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ text: inputText, requesting_user : 'Website' }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Origin\" : \"localhost:3000\"\r\n            }\r\n        };\r\n        console.log(postData)\r\n        fetch(\"/todos/\", postData)\r\n            .then(response => response.json())\r\n            .then(( todo ) => {\r\n                todos.push({id: todo.id, text: todo.text, completed: todo.completed});\r\n                setTodos(todos);\r\n            })\r\n            .catch(error => console.log(error));\r\n        setInputText('');\r\n    };\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n    return(\r\n        <form>\r\n            <input \r\n                value={inputText} \r\n                onChange={inputTextHandler} \r\n                type=\"text\" \r\n                className=\"todo-input\" \r\n            />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className= \"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"incompleted\">Incompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form","import React from 'react';\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        //setTodos(todos.filter(el => el.id !== todo.id));\r\n        const deleteData = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n        };\r\n        fetch(\"/todos/\" + todo.id, deleteData)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setTodos(todos.filter(td => td !== todo));\r\n            })\r\n        .catch(error => console.log(error))\r\n    };\r\n    const completeHandler = () => {\r\n        /*\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        })\r\n        \r\n      );\r\n      */\r\n        \r\n        const index = todos.indexOf(todo);\r\n        const putData = {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({ completed: !todo.completed}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n        };\r\n        fetch(\"/todos/\" + todo.id, putData)\r\n            .then(response => response.json())\r\n            .then(({ todo }) => {\r\n                todos[index] = { id: todo.id, name: todo.name, completed: todo.completed};\r\n                setTodos(todos)\r\n            })\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Todo","import React from 'react';\r\n//Import Components\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(todo => (\r\n                    <Todo \r\n                        todo={todo} \r\n                        todos={todos} \r\n                        setTodos={setTodos} \r\n                        key={todo.id} \r\n                        text={todo.text}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList","import React, { useState, useEffect, Component } from 'react';\r\n\r\n//Import Components\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\n\r\n//Import Hooks\r\nimport useInterval from './hooks/useInterval';\r\n\r\nfunction App() {\r\n  //GLOBALS\r\n  const TODOS_REFRESH_INTERVAL = 1000;\r\n\r\n  //State\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n   \r\n  //USE EFFECT\r\n  useEffect(() => {\r\n    filterHandler();\r\n  }, [todos, status]);\r\n\r\n   //we are going to just update with a polling system for now\r\n  useInterval(async () => {\r\n    fetch(\"/todos/\")\r\n      .then(response => response.json())\r\n      .then(data => setTodos(data))\r\n      .catch(error => console.log(error));\r\n  }, TODOS_REFRESH_INTERVAL);\r\n\r\n  //Functions\r\n  const filterHandler = () => {\r\n    \r\n    switch(status){\r\n      case 'completed':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\r\n        break;\r\n      case 'incompleted':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos)\r\n        break;\r\n    }\r\n  }\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <header> todo list </header>\r\n      <Form \r\n        inputText={inputText} \r\n        todos={todos} \r\n        setTodos={setTodos} \r\n        setInputText={setInputText}\r\n        status={status}\r\n        setStatus={setStatus}\r\n      />\r\n      <TodoList \r\n        todos={todos} \r\n        setTodos={setTodos} \r\n        filteredTodos={filteredTodos}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default App;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            const id = setInterval(tick, delay);\r\n            return () => {\r\n                clearInterval(id);\r\n            };\r\n        }\r\n    }, [callback, delay]);\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}